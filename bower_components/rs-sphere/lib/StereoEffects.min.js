/**
 * @author alteredq / http://alteredqualia.com/
 * @authod mrdoob / http://mrdoob.com/
 * @authod arodic / http://aleksandarrodic.com/
 * @authod fonserbc / http://fonserbc.github.io/
 *
 * Off-axis stereoscopic effect based on http://paulbourke.net/stereographics/stereorender/
 */
 THREE.StereoEffect=function(e){var t,a,n,o,r,i,s,c,p,E,f,h,u,l,S,T,d,g=this
 this.eyeSeparation=3,this.focalLength=15,Object.defineProperties(this,{separation:{get:function(){return g.eyeSeparation},set:function(e){console.warn("THREE.StereoEffect: .separation is now .eyeSeparation."),g.eyeSeparation=e}},targetDistance:{get:function(){return g.focalLength},set:function(e){console.warn("THREE.StereoEffect: .targetDistance is now .focalLength."),g.focalLength=e}}}),n=new THREE.Vector3,o=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.PerspectiveCamera,s=new THREE.PerspectiveCamera,e.autoClear=!1,this.setSize=function(n,o){t=n/2,a=o,e.setSize(n,o)},this.render=function(g,R){g.updateMatrixWorld(),null===R.parent&&R.updateMatrixWorld(),R.matrixWorld.decompose(n,o,r),c=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(R.fov))/R.zoom)),u=R.near/this.focalLength,S=Math.tan(.5*THREE.Math.degToRad(c))*this.focalLength,l=.5*S*R.aspect,f=S*u,h=-f,T=(l+this.eyeSeparation/2)/(2*l),d=1-T,p=2*l*u*d,E=2*l*u*T,i.projectionMatrix.makeFrustum(-p,E,h,f,R.near,R.far),i.position.copy(n),i.quaternion.copy(o),i.translateX(-this.eyeSeparation/2),s.projectionMatrix.makeFrustum(-E,p,h,f,R.near,R.far),s.position.copy(n),s.quaternion.copy(o),s.translateX(this.eyeSeparation/2),e.clear(),e.enableScissorTest(!0),e.setScissor(0,0,t,a),e.setViewport(0,0,t,a),e.render(g,i),e.setScissor(t,0,t,a),e.setViewport(t,0,t,a),e.render(g,s),e.enableScissorTest(!1)}}
